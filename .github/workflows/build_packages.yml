on:
  push:
    branches:
      - 'actions-next'

name: Build All MAGE Server Packages

env:
  MAGE_SHOULD_TEST: ${{ !contains(github.ref, 'next') }}
  MAGE_NODE_VERSIONS: '[ 14, 12 ]'

jobs:
  build_service:
    name: Build MAGE Service
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: ${{ fromJSON(env.MAGE_NODE_VERSIONS) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: install native dev libs
        run: |
          sudo apt-get install build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          catch-dependency-path: |
            service/package-lock.json
            plugins/nga-msi/package-lock.json
      - name: checkout
        uses: actions/checkout@v2
      - name: build service
        run: |
          cd service
          npm ci
          npm run build
      - name: test service
        if: ${{ fromJSON(env.MAGE_SHOULD_TEST) }}
        run: npm run --prefix service ci:test
      - name: pack service
        run: npm pack ./service
      - name: build plugin nga-msi
        run: |
          cd plugins/nga-msi
          npm ci
          npm run build
      - name: test plugin nga-msi
        if: ${{ fromJSON(env.MAGE_SHOULD_TEST) }}
        run: npm run --prefix plugins/nga-msi test:run
      - name: pack nga-msi
        run: npm pack ./plugins/nga-msi
      - name: upload packages
        uses: actions/upload-artifact@v2
        with:
          name: mage_service_packages-node-${{ matrix.node }}
          path: |
            ngageoint-mage.*.tgz
  build_web-app:
    name: Build MAGE Web App
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: npm
          catch-dependency-path: web-app/package-lock.json
      - name: checkout
        uses: actions/checkout@v2
      - name: build web-app
        run: |
          cd web-app
          npm ci
          npm run build
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
      - name: test web-app
        if: ${{ fromJSON(env.MAGE_SHOULD_TEST) }}
        run: npm run --prefix web-app test-headless
      - name: pack web-app
        run: npm pack ./web-app/dist/app
      - name: upload packages
        uses: actions/upload-artifact@v2
        with:
          name: mage_web-app_packages
          path: |
            ngageoint-mage.*.tgz
  build_instance:
    needs: [ build_service, build_web-app ]
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: ${{ fromJSON(env.MAGE_NODE_VERSIONS) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: download package artifacts
        uses: actions/download-artifact@v2
      - name: list artifacts
        run: ls -R

